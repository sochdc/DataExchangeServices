// default package
// Generated Feb 9, 2017 12:28:59 PM by Hibernate Tools 4.3.5.Final
package com.soch.de.domain;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RolesTb generated by hbm2java
 */
@Entity
@Table(name="roles_tb")
public class RolesEntity  implements java.io.Serializable {


     private int roleId;
     private SystemEntity systemEntity;
     private String roleName;
     private String roleDescription;
     private String createdBy;
     private Date createdTs;
     private Date updatedTs;
     private String updatedBy;
     private Set<UserRoleEntity> userRoleEntitys = new HashSet<UserRoleEntity>(0);
     private Set<OnboardingApprovalEntity> onboardingApprovalEntity = new HashSet<OnboardingApprovalEntity>(0);
     private Set<TempUserRoleEntity> tempUserRoleEntities = new HashSet<TempUserRoleEntity>(0);
     private Set<RoleMappingEntity> roleMappingEntities = new HashSet<RoleMappingEntity>(0);
     private ExternalSourceRoleEntity externalSourceRoleEntity;
     private byte[] fileContent;

    public RolesEntity() {
    }

	
    public RolesEntity(int roleId) {
        this.roleId = roleId;
    }
    public RolesEntity(int roleId, SystemEntity systemEntity, String roleName, String roleDescription, String createdBy, Date createdTs, Date updatedTs, String updatedBy, Set<UserRoleEntity> userRoleEntitys) {
       this.roleId = roleId;
       this.systemEntity = systemEntity;
       this.roleName = roleName;
       this.roleDescription = roleDescription;
       this.createdBy = createdBy;
       this.createdTs = createdTs;
       this.updatedTs = updatedTs;
       this.updatedBy = updatedBy;
       this.userRoleEntitys = userRoleEntitys;
      
    }
   
     @Id 
     @GeneratedValue(strategy = GenerationType.TABLE, generator="SeqGen")
	 @TableGenerator(
		        name="SeqGen", 
		        table="SEQ_TB", 
		        pkColumnName="seq_name", 
		        valueColumnName="seq_val", 
		        pkColumnValue="role_id", 
		        allocationSize=1)
    @Column(name="role_id", unique=true, nullable=false)
    public int getRoleId() {
        return this.roleId;
    }
    
    public void setRoleId(int roleId) {
        this.roleId = roleId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="system_id")
    public SystemEntity getSystemEntity() {
        return this.systemEntity;
    }
    
    public void setSystemEntity(SystemEntity systemEntity) {
        this.systemEntity = systemEntity;
    }

    
    @Column(name="role_name", length=45)
    public String getRoleName() {
        return this.roleName;
    }
    
    public void setRoleName(String roleName) {
        this.roleName = roleName;
    }

    
    @Column(name="role_description", length=200)
    public String getRoleDescription() {
        return this.roleDescription;
    }
    
    public void setRoleDescription(String roleDescription) {
        this.roleDescription = roleDescription;
    }

    
    @Column(name="created_by", length=50)
    public String getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_ts", length=19)
    public Date getCreatedTs() {
        return this.createdTs;
    }
    
    public void setCreatedTs(Date createdTs) {
        this.createdTs = createdTs;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_ts", length=19)
    public Date getUpdatedTs() {
        return this.updatedTs;
    }
    
    public void setUpdatedTs(Date updatedTs) {
        this.updatedTs = updatedTs;
    }

    
    @Column(name="updated_by", length=50)
    public String getUpdatedBy() {
        return this.updatedBy;
    }
    
    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @OneToMany(fetch=FetchType.LAZY, mappedBy="rolesEntity")
    public Set<UserRoleEntity> getUserRoleEntitys() {
        return this.userRoleEntitys;
    }
    
    public void setUserRoleEntitys(Set<UserRoleEntity> userRoleEntitys) {
        this.userRoleEntitys = userRoleEntitys;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rolesEntity")
	public Set<OnboardingApprovalEntity> getOnboardingApprovalEntity() {
		return onboardingApprovalEntity;
	}

	
	
	public void setOnboardingApprovalEntity(Set<OnboardingApprovalEntity> onboardingApprovalEntity) {
		this.onboardingApprovalEntity = onboardingApprovalEntity;
	}


	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rolesEntity")
	public Set<TempUserRoleEntity> getTempUserRoleEntities() {
		return tempUserRoleEntities;
	}


	public void setTempUserRoleEntities(Set<TempUserRoleEntity> tempUserRoleEntities) {
		this.tempUserRoleEntities = tempUserRoleEntities;
	}

	@Column(name = "fileContent")
	public byte[] getFileContent() {
		return fileContent;
	}


	public void setFileContent(byte[] fileContent) {
		this.fileContent = fileContent;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rolesEntity")
	public Set<RoleMappingEntity> getRoleMappingEntities() {
		return roleMappingEntities;
	}


	public void setRoleMappingEntities(Set<RoleMappingEntity> roleMappingEntities) {
		this.roleMappingEntities = roleMappingEntities;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "EXTERNAL_SOURCE_ROLE_ID")
	public ExternalSourceRoleEntity getExternalSourceRoleEntity() {
		return externalSourceRoleEntity;
	}

	
	public void setExternalSourceRoleEntity(ExternalSourceRoleEntity externalSourceRoleEntity) {
		this.externalSourceRoleEntity = externalSourceRoleEntity;
	}
	
	
	
}


